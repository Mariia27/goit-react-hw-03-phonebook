{"version":3,"sources":["component/styles.module.css","component/Form/Form.js","component/Contact/Contact.js","component/Search/Search.js","App.js","index.js"],"names":["module","exports","Form","state","name","number","handleInputValues","evt","currentTarget","value","setState","addContact","preventDefault","props","contactList","alert","onSubmit","id","shortid","generate","resetInputValues","idName","idNumber","className","style","form","this","htmlFor","labelName","type","onChange","autoComplete","labelNumber","pattern","btnForm","Component","СontactList","onDeleted","map","btnList","onClick","Search","containerSearch","labelSearch","inputSearch","Mobile","contacts","filter","contact","veluesFilter","e","getFilter","filterValues","toLowerCase","includes","onCheckName","newName","numbers","some","Object","values","join","deletedContact","contactId","prevState","prevProps","console","log","localStorage","setItem","JSON","stringify","getStorageContacts","getItem","parsStorageContacts","parse","filterContact","container","headingForm","velue","React","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.4bff6268.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"styles_container__KyXv2\",\"headingForm\":\"styles_headingForm__2evJd\",\"contactList\":\"styles_contactList__1Lg7l\",\"form\":\"styles_form__DfRMm\",\"labelName\":\"styles_labelName__G0LUB\",\"labelNumber\":\"styles_labelNumber__3GdyV\",\"btnForm\":\"styles_btnForm__2GLhY\",\"containerSearch\":\"styles_containerSearch__2dEg-\",\"btnList\":\"styles_btnList__1rWqy\"};","import React, { Component } from 'react';\r\nimport shortid from 'shortid';\r\nimport style from '../styles.module.css';\r\n\r\nclass Form extends Component {\r\n    state = {\r\n        name: '',\r\n        number: '',\r\n    };\r\n    handleInputValues = evt => {\r\n        const { name, value } = evt.currentTarget;\r\n        this.setState({ [name]: value });\r\n    };\r\n    addContact = evt => {\r\n        evt.preventDefault();\r\n        const checkName = this.props.contactList({ name: this.state.name });\r\n        if (checkName) {\r\n            alert('this name is aready exist');\r\n\r\n            return;\r\n        }\r\n\r\n        this.props.onSubmit({\r\n            id: shortid.generate(),\r\n            name: this.state.name,\r\n            number: this.state.number,\r\n        });\r\n        this.resetInputValues();\r\n    };\r\n\r\n    resetInputValues = () => {\r\n        this.setState({ name: '', number: '' });\r\n    };\r\n\r\n    render() {\r\n        const idName = shortid.generate();\r\n        const idNumber = shortid.generate();\r\n        return (\r\n            <form className={style.form} onSubmit={this.addContact}>\r\n                <label htmlFor={idName} className={style.labelName}>\r\n                    Name\r\n                </label>\r\n                <input\r\n                    id={idName}\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    value={this.state.name}\r\n                    onChange={this.handleInputValues}\r\n                    autoComplete=\"off\"\r\n                ></input>\r\n                <label htmlFor={idNumber} className={style.labelNumber}>\r\n                    Number\r\n                </label>\r\n                <input\r\n                    id={idNumber}\r\n                    type=\"tel\"\r\n                    pattern=\"^[ 0-9]+$\"\r\n                    name=\"number\"\r\n                    value={this.state.number}\r\n                    onChange={this.handleInputValues}\r\n                    autoComplete=\"off\"\r\n                ></input>\r\n                <button className={style.btnForm} type=\"submite\">\r\n                    Add contact\r\n                </button>\r\n            </form>\r\n        )\r\n    }\r\n}\r\nexport default Form","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport style from '../styles.module.css';\r\n\r\nexport default function СontactList({ contactList, onDeleted }) {\r\n    return (\r\n        <ul className={'js-list'}>\r\n            {contactList.map(({ id, name, number }) => {\r\n                return (<li key={id}>\r\n                    {name}: {number}\r\n                    <button\r\n                        className={style.btnList}\r\n                        type=\"button\"\r\n                        onClick={() => onDeleted(id)}>\r\n                        Видалити\r\n                    </button>\r\n                </li>);\r\n            })}\r\n        </ul>\r\n    );\r\n}\r\n\r\nСontactList.propTypes = {\r\n    contactList: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n            id: PropTypes.string.isRequired,\r\n            name: PropTypes.string.isRequired,\r\n            number: PropTypes.string.isRequired,\r\n        }),\r\n    ),\r\n    onDeleted: PropTypes.func.isRequired,\r\n};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport shortid from 'shortid';\r\n\r\nimport style from '../styles.module.css';\r\nexport default function Search({ value, Search }) {\r\n    const id = shortid.generate();\r\n    return (\r\n        <div className={style.containerSearch}>\r\n            <label className={style.labelSearch} htmlFor={id}>\r\n                Поиск контакта по имени\r\n            </label>\r\n            <input\r\n                type=\"text\"\r\n                name=\"filter\"\r\n                value={value}\r\n                onChange={Search}\r\n                id={id}\r\n                className={style.inputSearch}\r\n            ></input>\r\n        </div>\r\n    );\r\n}\r\nSearch.propTypes = {\r\n    velue: PropTypes.string.isRequired,\r\n    Search: PropTypes.func.isRequired,\r\n};","import React from 'react';\nimport style from './component/styles.module.css'\nimport Form from './component/Form/Form';\nimport ContactList from './component/Contact/Contact';\nimport Search from './component/Search/Search';\n\n\nexport default class Mobile extends React.Component {\n  state = {\n    contacts: [],\n    filter: '',\n  };\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.contacts !== prevState.contacts) {\n      console.log('Обнова');\n      localStorage.setItem('contacts', JSON.stringify(this.state.contacts));\n    }\n  }\n  componentDidMount() {\n    const getStorageContacts = localStorage.getItem('contacts');\n    const parsStorageContacts = JSON.parse(getStorageContacts);\n    if (getStorageContacts) {\n      this.setState({ contacts: parsStorageContacts });\n    }\n\n  }\n\n  addContact = contact => {\n    this.setState({\n      contacts: [contact, ...this.state.contacts],\n    });\n  };\n\n  veluesFilter = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({ [name]: value });\n  };\n  getFilter = () => {\n    const { filter, contacts } = this.state;\n    const filterValues = filter.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterValues),\n    );\n  };\n\n  onCheckName = (newName, numbers) => {\n    return this.state.contacts.some(\n      ({ name }) => name === Object.values(newName).join(''),\n    );\n  };\n\n  deletedContact = contactId => {\n    this.setState(prevState => ({\n      contacts: prevState.contacts.filter(contact => contact.id !== contactId),\n    }));\n  };\n\n  render() {\n    const filterContact = this.getFilter();\n    return (\n      <div className={style.container}>\n        <h1 className={style.headingForm}>Телефонна книга</h1>\n        <Form onSubmit={this.addContact} contactList={this.onCheckName} />\n        <h2 className={style.contactList}>Контакти</h2>\n        <Search\n          velue={this.state.filter}\n          Search={this.veluesFilter}\n        />\n        <ContactList\n          contactList={filterContact}\n          onDeleted={this.deletedContact}\n        />\n      </div>\n    );\n  }\n}","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.querySelector('#root'));"],"sourceRoot":""}